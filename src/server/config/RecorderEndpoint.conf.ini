;; How to fix gaps when they are found in the recorded stream.
;;
;; Gaps are typically caused by packet loss in the input streams, such as when
;; an RTP or WebRTC media flow suffers from network congestion and some packets
;; don't arrive at the media server.
;;
;; Possible values:
;;
;; * NONE: Do not fix gaps.
;;
;;   Leave the stream as-is, and store it with any gaps that the stream might
;;   have. Some players are clever enough to adapt to this during playback, so
;;   that the gaps are reduced to a minimum and no problems are perceived by the
;;   user; other players are not so sophisticated, and will struggle trying to
;;   decode a file that contains gaps. For example, trying to play such a file
;;   directly with Chrome will cause lipsync issues (audio and video will fall
;;   out of sync).
;;
;;   This is the best choice if you need consistent durations across multiple
;;   simultaneous recordings, or if you are anyway going to post-process the
;;   recordings (e.g. with an extra FFmpeg step).
;;
;; * GENPTS: Adjust timestamps to generate a smooth progression over all frames.
;;
;;   This technique rewrites the timestamp of all frames, so that gaps are
;;   suppressed. It provides the best playback experience for recordings that
;;   need to be played as-is (i.e. they won't be post-processed). However,
;;   fixing timestamps might cause a change in the total duration of a file. So
;;   different recordings from the same session might end up with slightly
;;   different durations.
;;
;; Default: NONE.
;;
;gapsFix=NONE
